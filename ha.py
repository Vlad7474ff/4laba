class Сумма:  # Класс для вычисления суммы
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def вычислить(self):  # Метод для выполнения вычислений
        return self.x + self.y


class Разность:  # Класс для вычисления разности
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def вычислить(self):  # Метод для выполнения вычислений
        return self.x - self.y


class Произведение:  # Класс для вычисления произведения
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def вычислить(self):  # Метод для выполнения вычислений
        return self.x * self.y


class Частное:  # Класс для вычисления частного
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def вычислить(self):  # Метод для выполнения вычислений
        if self.y == 0:
            raise ValueError("Нельзя делить на ноль")
        return self.x / self.y


class Калькулятор:  # Класс калькулятора
    def __init__(self):
        pass

    def выполнить_операцию(self, операция, x, y):  # Метод для выполнения операции
        if операция == 'сумма':
            return Сумма(x, y).вычислить()
        elif операция == 'разность':
            return Разность(x, y).вычислить()
        elif операция == 'произведение':
            return Произведение(x, y).вычислить()
        elif операция == 'частное':
            return Частное(x, y).вычислить()
        else:
            raise ValueError("Недопустимая операция")


if __name__ == "__main__":
    калькулятор = Калькулятор()  # Создание экземпляра класса Калькулятор
    x = 50
    y = 2
    print("Сумма:", калькулятор.выполнить_операцию('сумма', x, y))
    print("Разность:", калькулятор.выполнить_операцию('разность', x, y))
    print("Произведение:", калькулятор.выполнить_операцию('произведение', x, y))
    print("Частное:", калькулятор.выполнить_операцию('частное', x, y))
